/* tslint:disable */
export const memory: WebAssembly.Memory;
export function g1_add(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function g2_add(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function g1_get_one(a: number, b: number): number;
export function g2_get_one(a: number, b: number): number;
export function gt_get_one(a: number, b: number): number;
export function g1_get_zero(a: number, b: number): number;
export function g2_get_zero(a: number, b: number): number;
export function gt_get_zero(a: number, b: number): number;
export function g1_mul(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function g2_mul(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function g1_neg(a: number, b: number, c: number, d: number): number;
export function g2_neg(a: number, b: number, c: number, d: number): number;
export function gt_mul(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function gt_inverse(a: number, b: number, c: number, d: number): number;
export function pairing(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function hash_to_g1(a: number, b: number, c: number, d: number): number;
export function hash_to_g2(a: number, b: number, c: number, d: number): number;
export function g1_add_s(a: number, b: number, c: number, d: number, e: number): void;
export function g2_add_s(a: number, b: number, c: number, d: number, e: number): void;
export function g1_get_one_s(a: number): void;
export function g2_get_one_s(a: number): void;
export function gt_get_one_s(a: number): void;
export function g1_get_zero_s(a: number): void;
export function g2_get_zero_s(a: number): void;
export function gt_get_zero_s(a: number): void;
export function g1_mul_s(a: number, b: number, c: number, d: number, e: number): void;
export function g2_mul_s(a: number, b: number, c: number, d: number, e: number): void;
export function g1_neg_s(a: number, b: number, c: number): void;
export function g2_neg_s(a: number, b: number, c: number): void;
export function gt_mul_s(a: number, b: number, c: number, d: number, e: number): void;
export function gt_inverse_s(a: number, b: number, c: number): void;
export function pairing_s(a: number, b: number, c: number, d: number, e: number): void;
export function hash_to_g1_s(a: number, b: number, c: number): void;
export function hash_to_g2_s(a: number, b: number, c: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_free(a: number, b: number): void;
